
//! Autogenerated weights for `pallet_valve`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Akhils-MacBook-Air.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("turing-dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/oak-collator
// benchmark
// pallet
// --chain=turing-dev
// --steps=50
// --repeat=20
// --pallet=pallet_valve
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/valve/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_valve`.
pub trait WeightInfo {
	fn close_valve() -> Weight;
	fn open_valve() -> Weight;
	fn close_pallet_gate_new() -> Weight;
	fn close_pallet_gate_existing() -> Weight;
	fn open_pallet_gate() -> Weight;
	fn open_pallet_gates() -> Weight;
	fn stop_scheduled_tasks() -> Weight;
	fn start_scheduled_tasks() -> Weight;
}

/// Weights for `pallet_valve` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:1)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	fn close_valve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `4453`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 4453)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:1)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	fn open_valve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `282`
		//  Estimated: `4474`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 4474)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	fn close_pallet_gate_new() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `7945`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 7945)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	fn close_pallet_gate_existing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `296`
		//  Estimated: `7259`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 7259)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	fn open_pallet_gate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `296`
		//  Estimated: `8050`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 8050)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:0 w:5)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	fn open_pallet_gates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `4972`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 4972)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: AutomationTime Shutdown (r:1 w:1)
	/// Proof Skipped: AutomationTime Shutdown (max_values: Some(1), max_size: None, mode: Measured)
	fn stop_scheduled_tasks() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `237`
		//  Estimated: `4429`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 4429)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: AutomationTime Shutdown (r:1 w:1)
	/// Proof Skipped: AutomationTime Shutdown (max_values: Some(1), max_size: None, mode: Measured)
	fn start_scheduled_tasks() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `4453`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(17_000_000, 4453)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:1)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	fn close_valve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `4453`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 4453)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:1)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	fn open_valve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `282`
		//  Estimated: `4474`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 4474)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	fn close_pallet_gate_new() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `7945`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 7945)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	fn close_pallet_gate_existing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `296`
		//  Estimated: `7259`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 7259)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ValveClosed (r:1 w:0)
	/// Proof Skipped: Valve ValveClosed (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:1 w:1)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	fn open_pallet_gate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `296`
		//  Estimated: `8050`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 8050)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: Valve ClosedPalletCount (r:1 w:1)
	/// Proof Skipped: Valve ClosedPalletCount (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Valve ClosedPallets (r:0 w:5)
	/// Proof Skipped: Valve ClosedPallets (max_values: None, max_size: None, mode: Measured)
	fn open_pallet_gates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `4972`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 4972)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: AutomationTime Shutdown (r:1 w:1)
	/// Proof Skipped: AutomationTime Shutdown (max_values: Some(1), max_size: None, mode: Measured)
	fn stop_scheduled_tasks() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `237`
		//  Estimated: `4429`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 4429)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: TechnicalMembership Members (r:1 w:0)
	/// Proof: TechnicalMembership Members (max_values: Some(1), max_size: Some(3202), added: 3697, mode: MaxEncodedLen)
	/// Storage: AutomationTime Shutdown (r:1 w:1)
	/// Proof Skipped: AutomationTime Shutdown (max_values: Some(1), max_size: None, mode: Measured)
	fn start_scheduled_tasks() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `261`
		//  Estimated: `4453`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(17_000_000, 4453)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}