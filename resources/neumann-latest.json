
====================

Version: 1.2.5-unknown-x86_64-linux-gnu

   0: sp_panic_handler::set::{{closure}}
   1: std::panicking::rust_panic_with_hook
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:610:17
   2: std::panicking::begin_panic_handler::{{closure}}
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:502:13
   3: std::sys_common::backtrace::__rust_end_short_backtrace
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/sys_common/backtrace.rs:139:18
   4: rust_begin_unwind
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:498:5
   5: core::panicking::panic_fmt
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/core/src/panicking.rs:107:14
   6: core::panicking::assert_failed_inner
   7: core::panicking::assert_failed
   8: neumann_collator::chain_spec::testnet_genesis_temp
   9: neumann_collator::chain_spec::neumann_latest::{{closure}}
  10: sc_chain_spec::chain_spec::GenesisSource<G>::resolve
  11: <sc_chain_spec::chain_spec::ChainSpec<G,E> as sc_chain_spec::ChainSpec>::as_json
  12: sc_service::chain_ops::import_blocks::build_spec
  13: sc_cli::commands::build_spec_cmd::BuildSpecCmd::run
  14: sc_cli::runner::Runner<C>::sync_run
  15: neumann_collator::command::run
  16: neumann_collator::main
  17: std::sys_common::backtrace::__rust_begin_short_backtrace
  18: std::rt::lang_start::{{closure}}
  19: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/core/src/ops/function.rs:259:13
      std::panicking::try::do_call
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:406:40
      std::panicking::try
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:370:19
      std::panic::catch_unwind
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panic.rs:133:14
      std::rt::lang_start_internal::{{closure}}
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/rt.rs:128:48
      std::panicking::try::do_call
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:406:40
      std::panicking::try
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panicking.rs:370:19
      std::panic::catch_unwind
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/panic.rs:133:14
      std::rt::lang_start_internal
             at /rustc/404c8471aba60c2d837fa728e7c729a0f52d5830/library/std/src/rt.rs:128:20
  20: main
  21: __libc_start_main
  22: _start


Thread 'main' panicked at 'assertion failed: `(left == right)`
  left: `9999999706873794553`,
 right: `10000000000000000000`: total endowed must be equal to 1 billion NEU', node/src/chain_spec.rs:425

This is a bug. Please report it at:

	https://github.com/OAK-Foundation/OAK-blockchain/issues/new

[2m2022-02-20 23:01:58[0m Building chain spec    
